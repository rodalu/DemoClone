name: GraphQuery

on:
   workflow_dispatch:
   push: 
     branches: [ main ]

jobs:
  check_api:
    runs-on: ubuntu-latest
    steps:     
         - uses: actions/checkout@v2
         - name: Github OctoCat
           run: echo Testing one liner    
              curl --request GET \
              -- url "https://api.github.com/octocat" \

         - name: Current Price Json BPI
           run: |   
                   curl -L \
                   -H "Accept: application/vnd.github+json" \
                   -H "Authorization: ${{ secrets.GITHUB_TOKEN }} " \
                   -H "X-GitHub-Api-Version: 2022-11-28" \
                   https://api.coindesk.com/v1/bpi/currentprice.json  -o "outputfile1.txt"           
   
  check_graphql:
    runs-on: ubuntu-latest
    steps:  
         - uses: actions/checkout@v2  
         
        #  - name: Load files
        #    uses: ./
        #    id: repositoryyaml
        #    with:
        #       path: https://api.github.com/repos/democlone/sample/repository-static.query.yaml

         - name: graphql read files
           run: |
            curl --request GET \
            --url "https://api.github.com/repos/democlone" \
            --header "Accept: application/vnd.github+json" \
            --header "Authorization: Bearer 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"


         - name: Connect Graphql
           run: | 
                  curl -H "Authorization: ${{secrets.GITHUB_TOKEN}}" -X POST -d " \
                  { \
                    \"query\": \"query { viewer { login }}\" \
                  } \
                  " https://api.github.com/graphql

         - name: Check Print graphQL with Json
           run: |   
                 curl 'https://jsonplaceholder.typicode.com/users' \
                 -X POST \
                 -H 'content-type: application/json' \
                 --data '{
                 "query": "{ users { email } }"
                 }' | python -m json.tool
                       
                       

  test_graphql:
    runs-on: ubuntu-latest
    steps:  
         - uses: actions/checkout@v2  
         - name: Current Query Users Json
           run: |           
                curl -H "Authorization: bearer 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" -X POST -d " \
                { \
                  \"query\": \"query { viewer { login }}\" \
                  } \
                " https://api.coindesk.com/v1/bpi/currentprice.json  

         - name: Graphql Mutations
           run: |  
                curl 'https://jsonplaceholder.typicode.com/users' \
                -X POST \
                -H 'Authorization: Token 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' \
                -H 'content-type: application/json' \
                --data '{
                  "query": "{ users { email } }"
                }'   
                
                
         - name: POST Graphql Mutations
           run: |  
                curl 'https://jsonplaceholder.typicode.com/users' \
                -X POST \
                -H 'Authorization: Token ${{secrets.GITHUB_TOKEN}}' \
                -H 'content-type: application/json' \
                -v --trace-ascii 
                --data '{
                  "query": "{ users { email } }"
                }'  
                
         - name: Print GraphQL Mutation username and mail
           run: |   
              curl 'https://jsonplaceholder.typicode.com/users' \
              -X POST \
              -D - \
              -H 'content-type: application/json' \
              --data '{
                "query": "{ users { username mail } }"
              }'  

         - name: Test Query
           run: |   
            curl --header "Content-Type: application/json" \
            --request POST \
            --data '{"query":"query { users ( where:{ _and: [ { diagnosis_code: {_in: [\"S00-T88\",\"T20-R73\"]}}, 
            { price: {_lt: 150}}, { users: {_gt: 10}} ] } ) { email, id } }","variables":null}' \
            https://jsonplaceholder.typicode.com/users
                


         - name: Test GraphQL QRY
           run: |   
                curl -X POST -H "Authorization: bearer ${{secrets.GITHUB_TOKEN}}" \
                -H "Content-Type: application/json" \
                -d '{"query": "query { repository(owner:\"rodalu\", name:\"hello-world\")\
                { name description primaryLanguage { name } } }"}' \
                 https://api.github.com/graphql
              
         - name: 2 Mutation GraphQL QRY
           run: | 
               curl -X POST -H "Authorization: bearer ${{secrets.GITHUB_TOKEN}}" \
               -H "Content-Type: application/json" \
               -d '{"query": "mutation { createLabel(input: {repositoryId: \"<REPOSITORY_ID>\", name: \"bug\", color: \"d73a4a\"}) \
                { label { id name } } addLabelsToLabelable(input: {labelableId: \"<ISSUE_ID>\", labelIds: [\"<LABEL_ID>\"]}) \
                 { clientMutationId } }"}' https://api.github.com/graphql
